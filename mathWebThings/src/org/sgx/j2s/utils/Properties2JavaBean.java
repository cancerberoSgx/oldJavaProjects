package org.sgx.j2s.utils;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Iterator;
import java.util.Properties;

/**
 * tag: code generation
 * 
 * given a .properties files (with valid property names and values) this class will generate a java bean class 
 * code and a constructor calling (the complete java code of an object representing the .properties state.  
 * 
 * this is useful if you want to interact with java.util.Properties using java objects 
 * 
 * all properties will be String. it doesn't check for valid properties names 
 * 
 * 
 * a note: we can't reflect the order of properties defined in the .properties file because we are using (the hashmap) java.util.Properties
 * @author SGURIN
 *
 */
public class Properties2JavaBean {
	private Properties props;
	public  String propertiesToBean(String className, 
			String packageName) throws IOException {
		String attrDef = "\tString ", methodsDef="", 
		constructorSignature="\tpublic "+className+"(", constructorBody="{";
		Iterator<Object> it = props.keySet().iterator();
		while (it.hasNext()) {
			String k = (String) it.next();
			attrDef+=k;
			constructorSignature+="String "+k;
			constructorBody+="\n\t\tthis."+k+"="+k+";";
			if(it.hasNext()){
				attrDef+=", ";
				constructorSignature+=", ";
			}
			methodsDef+="\n\n"+buildGetter(k)+"\n"+buildSetter(k);
		}
		constructorSignature+=")";
		constructorBody+="\n\t}";

		return "package "+packageName+";\n" +
		"/** this class was autogenerated from a .properties file by Properties2JavaBean */\n"+
		"public class "+className+"{\n" +

		""+attrDef+";\n"+
		constructorSignature+constructorBody+"\n"+
		methodsDef+"\n" +
		"\n\n\tpublic static "+className+ " newInstante(){ " +
		"\n\t\t"+propertiesToBeanConstructor(className, "inst")+
		";\n\t\treturn inst;" +
		"\n\t}\n" +
		"}";		
	}
	public String propertiesToBeanConstructor(String className, 
			String instanceName) throws IOException{
		String s = className+" "+instanceName+" = new "+className+"(";
		Iterator<Object> it = props.keySet().iterator();
		while (it.hasNext()) {
			s+="\""+props.get(it.next())+"\"";
			if(it.hasNext())
				s+=", ";			
		}
		return s+");";
	}
	public void load(String s) throws IOException {
		load(stringToStream(s));
	}
	public void load(InputStream s) throws IOException {
		props = new Properties();
		props.load(s);
	}
	private static InputStream stringToStream(String s) {
		return new ByteArrayInputStream(s.getBytes());
	}
	String buildGetter(String propName) {
		return "\tpublic String get"+changeFirstLetterMayus(propName, true)+
			"(){\n\t\treturn this."+propName+";\n\t}";
	}
	String buildSetter(String propName) {
		return "\tpublic void set"+changeFirstLetterMayus(propName, true)+
			"(String attr){\n\t\tthis."+propName+" = attr;\n\t}";
	}
	public static String changeFirstLetterMayus(String strInput, boolean mayus) {
		if(mayus)
			return strInput.substring(0,1).toUpperCase()+
			strInput.substring(1,strInput.length());
		else
			return strInput.substring(0,1).toLowerCase()+
			strInput.substring(1,strInput.length());
	}


	//test/debug
	public static void main(String[] args) {
		try {
			test1();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	private static void test1() throws IOException {
		Properties2JavaBean conversor = new Properties2JavaBean();
//		String code ="prop1=hello\n" +
//					 "prop2=hola";
		
		String code ="username=fulano\npassword=xyz\nserverUrl=http://192.168.1.111";
			
		conversor.load(code);
		String beanstr = conversor.propertiesToBean("ConfigBean", "org.sgx.claroscuro");
		System.out.println(beanstr);
	}




}
